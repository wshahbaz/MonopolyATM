
bool transfer(int transferer, int numPlayers, int * balance[], bool * isPlaying[], int * transferBills[])
{
	int transferee = 0, numOptions = 0;
	int player[MAXPLAYER];
	for (int index = 0; index < MAXPLAYER; index++)
	{
		player[index] = 0;
	}
	displayTransferOptions(transferer, numPlayers, player, isPlaying);
	transferee = getTransferRecipient(numPlayers, player);
	if (transferee = -1)
	{
		return 0;
	}
	else
	{
		transferAmount(balance[transferer], balance[transferee], balance, transferBills);
	}
		return 0;
}

void displayTransferDestinations(int transferer, int numPlayers, int * player[], bool * isPlaying[])
{
	int index = 0, row = DISPLAYSTART;//menu display start line
	for(int num = 0; num < numPlayers; num++)
	{
		if(num != transferer && isPlaying[num])
		{
			if(num == 0)
			{
				displayString(row, "Monopoly");
				row ++;
				player[index] = num;
				index ++;
			}
			else
			{
				displayString(row, "Player %d", num);
				row ++;
				player[index] = num;
				index ++;
			}
		}
	}
}

int getTransferRecipient(int numOptions, int * player[])
{
	int transferee = -1;
	
	while (!getButtonPress(buttonAny) || (numOptions < 3 && getButtonPress(buttonRight)) || (numOptions < 4 && getButtonPress(buttonDown)))
	{}
	if (getButtonPress(buttonUp))
		transferee = player[0];
	else if (getButtonPress(buttonLeft))
		transferee = player[1];
	else if (getButtonPress(buttonRight))
		transferee = player[2];
	else if (getButtonPress(buttonDown))
		transferee = player[3];
	while(getButtonPress(buttonAny))
	{}
	
	return transferee;
}

void transferAmount(int transferer, int transferee, int * balance[], int * transferBills[])
{
	transferAmount = getAmount(transferBills);
	balance[transferer] -= transferAmount;
	balance[transferee] += transferAmount;
}

int getAmount(int * transferBills[])
{
	displayLowerOptions(transferBills);
	int transferAmount = calcTransaction(transferBills);
	return transferAmount;
}

